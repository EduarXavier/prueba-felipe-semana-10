services:
  backoffice: 
    image: danielsanchez18/gopenux-prueba-sem-ene8:latest
    environment:
      MONGO_HOST: "mongodb"
      MONGO_PORT: "27017"
      MONGO_USER: "root"
      MONGO_PASSWORD: "password"
      MONGO_DB_NAME: "test_db"
      REDIS_HOST: "redis"
      ES_HOST: "elasticsearch"
      ES_PORT: "9200"
      REDIS_PORT: "6379"
      FLASK_PORT: "5000"
      ES_INDEX: "data_index"
    ports:
      - "5000:5000"
    networks:
      database:
        aliases:
          - backoffice.docker
      network-nginx:
        aliases:
          - backoffice.docker
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.labels.role == application
      resources:
        limits:
          memory: 512M
          cpus: "0.5"

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=test_db
    ports:
      - "27017:27017"
    volumes:
      - /dbmongo:/data/db
    networks:
      database:
        aliases:
          - mongodb.docker
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == database1
      resources:
        limits:
          memory: 512M
          cpus: "0.5"

  redis:
    image: redis:latest
    volumes: 
      - /local-data:/data redis/redis-stack
    ports:
      - "6379:6379"
    networks:
      database:
        aliases:
          - redis.docker
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == database2
      resources:
        limits:
          memory: 256M
          cpus: "0.25"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      database:
        aliases:
          - elasticsearch.docker
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == database2
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  ingress:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/ssl
    networks:
      network-nginx:
        aliases:
          - nginx-network.docker
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.role == manager

networks:
  database:
    driver: overlay  
  network-nginx:
    driver: overlay  

volumes:
  elasticsearch_data:
